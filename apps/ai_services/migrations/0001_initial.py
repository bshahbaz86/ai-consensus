# Generated by Django 4.2.24 on 2025-09-09 23:47

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('conversations', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AIQuery',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('prompt', models.TextField()),
                ('context', models.JSONField(default=dict)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('services_requested', models.JSONField(default=list)),
                ('services_completed', models.JSONField(default=list)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('total_responses', models.PositiveIntegerField(default=0)),
                ('preferred_response_id', models.UUIDField(blank=True, null=True)),
                ('conversation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ai_queries', to='conversations.conversation')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ai_queries', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'AI Query',
                'verbose_name_plural': 'AI Queries',
                'db_table': 'ai_queries',
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='AIService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('display_name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('api_base_url', models.URLField()),
                ('model_name', models.CharField(max_length=100)),
                ('max_tokens', models.PositiveIntegerField(default=4000)),
                ('is_active', models.BooleanField(default=True)),
                ('is_available', models.BooleanField(default=True)),
                ('input_cost_per_1k', models.DecimalField(decimal_places=6, default=0, max_digits=10)),
                ('output_cost_per_1k', models.DecimalField(decimal_places=6, default=0, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'AI Service',
                'verbose_name_plural': 'AI Services',
                'db_table': 'ai_services',
                'ordering': ['display_name'],
            },
        ),
        migrations.CreateModel(
            name='AIServiceTask',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('prompt', models.TextField()),
                ('context', models.JSONField(default=dict)),
                ('status', models.CharField(choices=[('queued', 'Queued'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('retrying', 'Retrying')], default='queued', max_length=20)),
                ('celery_task_id', models.CharField(blank=True, max_length=255, null=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('retry_count', models.PositiveIntegerField(default=0)),
                ('max_retries', models.PositiveIntegerField(default=3)),
                ('query', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_tasks', to='ai_services.aiquery')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ai_services.aiservice')),
            ],
            options={
                'verbose_name': 'AI Service Task',
                'verbose_name_plural': 'AI Service Tasks',
                'db_table': 'ai_service_tasks',
                'indexes': [models.Index(fields=['status', 'started_at'], name='ai_service__status_ddcdfa_idx'), models.Index(fields=['celery_task_id'], name='ai_service__celery__aae6e8_idx')],
                'unique_together': {('query', 'service')},
            },
        ),
    ]
