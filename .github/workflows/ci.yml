name: CI - Run All Tests

on:
  pull_request:
    branches: [ main ]

jobs:
  backend-tests:
    name: Backend Tests (Django)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Django integration tests
        env:
          USE_SQLITE: 1
          DJANGO_SECRET_KEY: 'test-secret-key-for-ci-only'
        run: |
          python manage.py test apps.conversations.tests.test_integration_consensus --verbosity=2

      - name: Run Django security tests
        env:
          USE_SQLITE: 1
          DJANGO_SECRET_KEY: 'test-secret-key-for-ci-only'
        run: |
          python manage.py test apps.accounts.tests.test_security --verbosity=2

      - name: Run all Django tests
        env:
          USE_SQLITE: 1
          DJANGO_SECRET_KEY: 'test-secret-key-for-ci-only'
        run: |
          python manage.py test --verbosity=2

  frontend-tests:
    name: Frontend Tests (React)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/frontend/package-lock.json

      - name: Install dependencies
        working-directory: frontend/frontend
        run: npm ci

      - name: Run React tests
        working-directory: frontend/frontend
        run: npm test -- --watchAll=false --coverage

      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        if: always()
        with:
          directory: frontend/frontend/coverage
          flags: frontend
          fail_ci_if_error: false
        continue-on-error: true

  test-summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests]
    if: always()

    steps:
      - name: Check test results
        run: |
          echo "Backend Tests: ${{ needs.backend-tests.result }}"
          echo "Frontend Tests: ${{ needs.frontend-tests.result }}"

          if [ "${{ needs.backend-tests.result }}" != "success" ] || [ "${{ needs.frontend-tests.result }}" != "success" ]; then
            echo "❌ Some tests failed"
            exit 1
          else
            echo "✅ All tests passed!"
          fi
